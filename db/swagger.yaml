swagger: '2.0'
info:
  title: Angular Store API
  description: Store module for ERP based on AngularJS
  version: "0.0.1"
# the domain of the service
host: jtumas.com.ar
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /storeAPI/v1
consumes:
  - application/json
produces:
  - application/json
paths:
  /products:
    get:
      tags:
        - Products
      description: Get a list of products.
      responses:
        200:
          description: An array of product objects.
          schema:
            $ref: '#/definitions/Product'
    put:
      tags:
       - Products
      description: Create a new product.
      parameters:
        - name: body
          in: body
          description: Product object to be created.
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        200:
          description: Product created succesfully.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /products/{productCode}:
    get:
      description: Get information about a product.
      parameters:
        - name: productCode
          in: path
          description: Unique product code
          required: true
          type: string
      tags:
        - Products
      responses:
        200:
          description: A product object.
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Update a product.
      parameters:
      - name: productCode
        in: path
        description: Id for product to be updated
      - name: body
        in: body
        description: Product object to be created.
        required: true
        schema:
          $ref: '#/definitions/Product'
      responses:
        200:
          description: Product updated succesfully.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: Delete a product.
      parameters:
        - name: productCode
          in: path
          description: Code for product to be deleted.
          required: true
          type: string
      tags:
        - Products
      responses:
        200:
          description: A product object.
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /sales:
    get:
      summary: Sales
      description: All the store sales
      tags:
        - Store
      responses:
        200:
          description: All sales
          schema:
            type: array
            items:
              $ref: '#/definitions/Sale'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /sales/{saleId}:
    get:
      summary: Sale
      description: Sale details
      parameters:
        - name: saleId
          in: path
          description: Unique sale identifier
          required: true
          type: integer
          format: int32
      tags:
        - Store
      responses:
        200:
          description: A sale
          schema:
            $ref: '#/definitions/Sale'
          examples:
            application/json:
              test: something
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /stock/{storeId}:
    get:
      summary: Stock details
      description: The store's complete stock
      parameters:
        - name: storeId
          in: path
          description: Unique Store's id.
          required: true
          type: integer
          format: int32
      tags:
        - Store
      responses:
        200:
          description: An array of products
          schema:
            $ref: '#/definitions/Activities'
          examples:
            application/json:
              name: Puma
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /reposition/{repositionId}:
    get:
      summary: Reposition details
      description: All the details of the selected reposition.
      parameters:
        - name: repositionId
          in: path
          description: Unique reposition's id.
          required: true
          type: integer
          format: int32
      tags:
        - Store
      responses:
        200:
          description: An array of the reposition's products and specific details
          schema:
            $ref: '#/definitions/Activities'
          examples:
            application/json:
              name: Puma
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users:
    get:
      summary: System user's
      description: All system users available for the current scope.
      tags:
        - User
      responses:
        200:
          description: An array of system users
          schema:
            type: array
            items:
              $ref: '#/definitions/Person'
          examples:
            application/json:
              - user: 
                  name: cacho
              - other:
                  name: sarasa
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /clients:
    get:
      summary: Store clients
      description: All clients owned by the current store.
      tags:
        - Store
      responses:
        200:
          description: An array of clients
          schema:
            type: array
            items:
              $ref: '#/definitions/Person'
          examples:
            application/json:
              - user: 
                  name: cacho
              - other:
                  name: sarasa
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me:
    get:
      summary: User Profile
      description: The User Profile endpoint returns information about the Uber user that has authorized with the application.
      tags:
        - User
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/Person'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /history:
    get:
      summary: User Activity
      description: The User Activity endpoint returns data about a user's lifetime activity with Uber. The response will include pickup locations and times, dropoff locations and times, the distance of past requests, and information about which products were requested.<br><br>The history array in the response will have a maximum length based on the limit parameter. The response value count may exceed limit, therefore subsequent API requests may be necessary.
      parameters:
        - name: offset
          in: query
          type: integer
          format: int32
          description: Offset the list of returned results by this amount. Default is zero.
        - name: limit
          in: query
          type: integer
          format: int32
          description: Number of items to retrieve. Default is 5, maximum is 100.
      tags:
        - User
      responses:
        200:
          description: History information for the given user
          schema:
            $ref: '#/definitions/Activities'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Product:
    properties:
      code:
        type: string
        description: Unique identifier representing a specific product.
      display_name:
        type: string
        description: Display name of product.
      detail:
        type: string
        description: Long description of the product
      images:
        type: string
        description: Image URL representing the product.
      amount:
        type: integer
        description: Optional. Associated quantity.
  Sale:
    properties:
      id:
        type: string
        description: Unique sale identifier.
      creation:
        type: string
        format: date
        description: Creation time
      client_id: 
        type: string
        description: Unique client identifier
      user_id:
        type: string
        description: Unique seller identifier
      price_list:
        type: string
        description: Pricelist used on this transaction
      discount:
        type: number
        description: Net discount 
      comment:
        type: string
        description: Sale's extra information.
      products:
        type: array
        items: 
          $ref: '#/definitions/Activity'
  Person:
    properties:
      first_name:
        type: string
        description: First name of the ERP user.
      last_name:
        type: string
        description: Last name of the ERP user.
      email:
        type: string
        description: Email address of the ERP user
      picture:
        type: string
        description: Image URL of the ERP user.
      phone:
        type: string
      address:
        type: string
      postal_code:
        type: integer
      area:
        type: string
      state:
        type: string
      country:
        type: string
      local_id:
        type: integer
  Activity:
    properties:
      uuid:
        type: string
        description: Unique identifier for the activity
      elements:
        type: array
        items:
          $ref: '#/definitions/Product'
  Activities:
    properties:
      offset:
        type: integer
        format: int32
        description: Position in pagination.
      limit:
        type: integer
        format: int32
        description: Number of items to retrieve (100 max).
      count:
        type: integer
        format: int32
        description: Total number of items available.
      history:
        type: array
        items:
          $ref: '#/definitions/Activity'
  Error:
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string